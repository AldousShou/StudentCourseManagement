<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoumh.core.mapper.CourseMapper">

    <resultMap id="BaseResultMap" type="com.shoumh.core.pojo.Course">
            <result property="courseId" column="course_id" jdbcType="VARCHAR"/>
            <result property="courseName" column="course_name" jdbcType="VARCHAR"/>
            <result property="teacherId" column="teacher_id" jdbcType="VARCHAR"/>
            <result property="credit" column="credit" jdbcType="DECIMAL"/>
            <result property="location" column="location" jdbcType="VARCHAR"/>
            <result property="hasPredecessor" column="has_predecessor" jdbcType="TINYINT"/>
            <result property="hasMajorDemand" column="has_major_demand" jdbcType="TINYINT"/>
            <result property="year" column="year" jdbcType="INTEGER"/>
            <result property="semester" column="semester" jdbcType="INTEGER"/>
            <result property="teacherName" column="teacher_name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        course_id,course_name,teacher_id,
        credit,location,has_predecessor,
        has_major_demand,year,semester,
        teacher_name
    </sql>

    <delete id="deleteById">
        delete from course
        where id = #{id}
    </delete>

    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from course_view
        where course_id = #{id}
    </select>


    <select id="selectCapacity" resultType="com.shoumh.core.pojo.CourseCapacity">
        <if test="courseId != null">
            select course_id, capacity, selection from course_capacity where course_id = #{courseId};
        </if>
        <if test="courseId == null">
            select 0 as capacity, 0 as selection;
        </if>
    </select>

    <select id="selectAllChosenByStudent" resultMap="BaseResultMap">
        select
            id, stu_id, select_dt, status,
            b.course_id, course_name, teacher_id, credit, location, has_predecessor, has_major_demand, year, semester, teacher_name
        from student_course a inner join course_view b on a.course_id = b.course_id
        where a.status = 'normal' and a.stu_id = #{stuId};
    </select>

    <select id="selectAllSelective" resultMap="BaseResultMap">
        # 当 student == null 时，访问 status 没有意义。
        <choose>
            <when test="student == null">  # 如果 stuent 为 null，则返回全集数据
                select <include refid="Base_Column_List"/>
                from course_view
                <where>
                    <if test="course != null">
                        <if test="course.courseId != null">and course_id = #{course.courseId}</if>
                        <if test="course.courseName != null">and course_name = #{course.courseName}</if>
                        <if test="course.teacherId != null">and teacher_id = #{course.teacherId}</if>
                        <if test="course.credit != null">and credit = #{course.credit}</if>
                        <if test="course.location != null">and location = #{course.location}</if>
                        <if test="course.hasPredecessor != null">and has_predecessor = #{course.hasPredecessor}</if>
                        <if test="course.hasMajorDemand != null">and has_major_demand = #{course.hasMajorDemand}</if>
                        <if test="course.year != null">and year = #{course.year}</if>
                        <if test="course.semester != null">and semester = #{course.semester}</if>
                        <if test="course.teacherName != null">and teacher_name = #{course.teacherName}</if>
                    </if>
                </where>
            </when>

            <otherwise>  # 如果 student 不为 null，则返回学生数据
                <if test="student.stuId != null">  # 如果 stu_id 不为 null，则直接返回对应学生信息
                    select
                    stu_id, a.course_id as course_id, select_dt, status, course_name, teacher_id, credit, location, has_predecessor, has_major_demand, year, semester, teacher_name
                    from student_course a inner join school.course_view c on c.course_id = a.course_id
                    <where>
                        stu_id = #{student.stuId}
                        <if test="status != null">and status = #{status}</if>
                    </where>
                </if>

                <if test="student.stuId == null"> # 如果 stu_id 为 null，则筛选相关信息
                    select
                    a.stu_id, a.course_id, select_dt, status, course_name, teacher_id, credit, location, has_predecessor, has_major_demand, year, semester, teacher_name
                    from student_course a
                    inner join school.course_view c on c.course_id = a.course_id
                    inner join school.student s on a.stu_id = s.stu_id
                    inner join school.teacher t on c.teacher_id = t.id

                    <where>
                        <if test="student.name != null">and s.name = #{student.name}</if>
                        <if test="student.gender != null">and s.gender = #{student.gender}</if>
                        <if test="student.entryDt != null">and s.entry_dt = #{student.entryDt}</if>
                        <if test="student.graduateDt != null">and s.graduate_dt = #{student.graduateDt}</if>
                        <if test="student.college != null">and s.college = #{student.college}</if>

                        <if test="course != null">
                            <if test="course.courseId != null">and c.course_id = #{course.courseId}</if>
                            <if test="course.courseName != null">and c.course_name = #{course.courseName}</if>
                            <if test="course.teacherId != null">and c.teacher_id = #{course.teacherId}</if>
                            <if test="course.credit != null">and c.credit = #{course.credit}</if>
                            <if test="course.location != null">and c.location = #{course.location}</if>
                            <if test="course.hasPredecessor != null">and c.has_predecessor = #{course.hasPredecessor}</if>
                            <if test="course.hasMajorDemand != null">and c.has_major_demand = #{course.hasMajorDemand}</if>
                            <if test="course.year != null">and c.year = #{course.year}</if>
                            <if test="course.semester != null">and c.semester = #{course.semester}</if>
                            <if test="course.teacherName != null">and c.teacher_name = #{course.teacherName}</if>
                        </if>
                    </where>
                </if>
            </otherwise>
        </choose>

        <if test="pagesize != null">limit #{pagesize}</if>
        <if test="start != null">offset #{start}</if>
    </select>

    <select id="selectUnchosenSelective" resultMap="BaseResultMap">
        <choose>
            <when test="course != null &amp;&amp; course.hasMajorDemand == 1">
                select
                <include refid="Base_Column_List"/>
                from course_view c
                inner join course_major b on c.course_id = b.id
                inner join student s on b.major = s.major
                <where>
                    s.stu_id = #{student.stuId}
                    and course_id not in (
                        select course_id from student_course where s.stu_id = 's_0000'
                    )

                    <if test="course.courseId != null">and c.course_id = #{course.courseId}</if>
                    <if test="course.courseName != null">and c.course_name = #{course.courseName}</if>
                    <if test="course.teacherId != null">and c.teacher_id = #{course.teacherId}</if>
                    <if test="course.credit != null">and c.credit = #{course.credit}</if>
                    <if test="course.location != null">and c.location = #{course.location}</if>
                    <if test="course.hasPredecessor != null">and c.has_predecessor = #{course.hasPredecessor}</if>
                    <if test="course.year != null">and c.year = #{course.year}</if>
                    <if test="course.semester != null">and c.semester = #{course.semester}</if>
                    <if test="course.teacherName != null">and c.teacher_name = #{course.teacherName}</if>
                </where>

            </when>
            <otherwise>
                select
                <include refid="Base_Column_List"/>
                from course_view
                <where>
                    course_id not in (
                        select course_id from student_course where stu_id = #{student.stuId}
                    )
                    <if test="course != null">
                        <if test="course.courseId != null">and course_id = #{course.courseId}</if>
                        <if test="course.courseName != null">and course_name = #{course.courseName}</if>
                        <if test="course.teacherId != null">and teacher_id = #{course.teacherId}</if>
                        <if test="course.credit != null">and credit = #{course.credit}</if>
                        <if test="course.location != null">and location = #{course.location}</if>
                        <if test="course.hasPredecessor != null">and has_predecessor = #{course.hasPredecessor}</if>
                        <if test="course.hasMajorDemand != null">and has_major_demand = #{course.hasMajorDemand}</if>
                        <if test="course.year != null">and year = #{course.year}</if>
                        <if test="course.semester != null">and semester = #{course.semester}</if>
                        <if test="course.teacherName != null">and teacher_name = #{course.teacherName}</if>
                    </if>
                </where>
            </otherwise>
        </choose>

        <if test="pagesize != null">limit #{pagesize}</if>
        <if test="start != null">offset #{start}</if>
    </select>

    <select id="hasAllSelective" resultType="java.lang.Boolean">
        # 当 student == null 时，访问 status 没有意义。
        <choose>
            <when test="student == null">  # 如果 stuent 为 null，则返回全集数据
                select
                    count(1) as num
                from course_view
                <where>
                    <if test="course != null">
                        <if test="course.courseId != null">and course_id = #{course.courseId}</if>
                        <if test="course.courseName != null">and course_name = #{course.courseName}</if>
                        <if test="course.teacherId != null">and teacher_id = #{course.teacherId}</if>
                        <if test="course.credit != null">and credit = #{course.credit}</if>
                        <if test="course.location != null">and location = #{course.location}</if>
                        <if test="course.hasPredecessor != null">and has_predecessor = #{course.hasPredecessor}</if>
                        <if test="course.hasMajorDemand != null">and has_major_demand = #{course.hasMajorDemand}</if>
                        <if test="course.year != null">and year = #{course.year}</if>
                        <if test="course.semester != null">and semester = #{course.semester}</if>
                        <if test="course.teacherName != null">and teacher_name = #{course.teacherName}</if>
                    </if>
                </where>
            </when>

            <otherwise>  # 如果 student 不为 null，则返回学生数据
                select
                count(1) as num
                from student_course a inner join course_view c on c.course_id = a.course_id
                <where>
                    stu_id = #{student.stuId}
                    <if test="status != null">and status = #{status}</if>

                    <if test="course != null">
                        <if test="course.courseId != null">and c.course_id = #{course.courseId}</if>
                        <if test="course.courseName != null">and c.course_name = #{course.courseName}</if>
                        <if test="course.teacherId != null">and c.teacher_id = #{course.teacherId}</if>
                        <if test="course.credit != null">and c.credit = #{course.credit}</if>
                        <if test="course.location != null">and c.location = #{course.location}</if>
                        <if test="course.hasPredecessor != null">and c.has_predecessor = #{course.hasPredecessor}</if>
                        <if test="course.hasMajorDemand != null">and c.has_major_demand = #{course.hasMajorDemand}</if>
                        <if test="course.year != null">and c.year = #{course.year}</if>
                        <if test="course.semester != null">and c.semester = #{course.semester}</if>
                        <if test="course.teacherName != null">and c.teacher_name = #{course.teacherName}</if>
                    </if>
                </where>
            </otherwise>
        </choose>
    </select>

    <insert id="insertChoiceLog">
        <choose>
            <when test="status != null">
                insert into choice_log (uuid, stu_id, course_id, status)
                values (#{uuid}, #{stuId}, #{courseId}, #{status});
            </when>
            <otherwise>
                insert into choice_log (uuid, stu_id, course_id)
                values (#{uuid}, #{stuId}, #{courseId});
            </otherwise>
        </choose>
    </insert>

    <update id="updateChoiceLog">
        update choice_log set status = #{status}
        where uuid = #{uuid} and stu_id = #{stuId} and course_id = #{courseId};
    </update>

    <select id="selectPredecessor" resultMap="BaseResultMap">
        call sp_get_predecessor(#{courseId});
    </select>

    <insert id="insertChoiceSheetLog">
        <choose>
            <when test="status != null">
                insert into choice_sheet_status (uuid, status)
                values (#{uuid}, #{status});
            </when>
            <otherwise>
                insert into choice_sheet_status (uuid)
                values (#{uuid});
            </otherwise>
        </choose>
    </insert>


    <update id="updateChoiceSheetLog">
        update choice_sheet_status set status = #{status}
        where uuid = #{uuid};
    </update>

    <insert id="choose">
        START TRANSACTION ;

            update course_capacity set selection = selection + 1 where course_id = #{course.courseId};

            insert into student_course (stu_id, course_id, select_dt, status) values (#{stuId}, #{course.courseId}, current_date, 'normal');

        COMMIT ;
    </insert>

</mapper>
